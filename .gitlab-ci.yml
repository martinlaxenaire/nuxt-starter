image: node:14

stages:
    - build
    - docker

# =======
# STAGING
# =======
nuxt_build_develop:
    stage: build
    interruptible: true
    only:
        - develop
    artifacts:
        expire_in: 1 hour
        paths:
            - .nuxt/
            - node_modules/
    script:
        - yarn install --pure-lockfile
        - yarn build

nuxt_docker_develop:
    stage: docker
    only:
        - develop
    image: docker:git
    services:
        - docker:dind
    when: on_success
    needs: [ "nuxt_build_develop" ]
    dependencies: [ "nuxt_build_develop" ]
    script:
        - "docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}"
        # App image build
        - "docker build -t ${CI_REGISTRY_IMAGE}/node -f .docker/node/Dockerfile ."
        - "docker tag ${CI_REGISTRY_IMAGE}/node ${CI_REGISTRY_IMAGE}/node:develop"
        - "docker push ${CI_REGISTRY_IMAGE}/node:develop"
        # NGINX image build
        - "docker build -t ${CI_REGISTRY_IMAGE}/nginx -f .docker/nginx/Dockerfile ."
        - "docker tag ${CI_REGISTRY_IMAGE}/nginx ${CI_REGISTRY_IMAGE}/nginx:develop"
        - "docker push ${CI_REGISTRY_IMAGE}/nginx:develop"
        # Varnish image build
        - "docker build -t ${CI_REGISTRY_IMAGE}/varnish -f .docker/varnish/Dockerfile ."
        - "docker tag ${CI_REGISTRY_IMAGE}/varnish ${CI_REGISTRY_IMAGE}/varnish:develop"
        - "docker push ${CI_REGISTRY_IMAGE}/varnish:develop"

# =======
# PROD
# =======
nuxt_build_tags:
    stage: build
    interruptible: true
    only:
        - tags
    artifacts:
        expire_in: 1 hour
        paths:
            - .nuxt/
            - node_modules/
    script:
        - yarn install --pure-lockfile
        - yarn build

nuxt_docker_tags:
    stage: docker
    only:
        - tags
    image: docker:git
    services:
        - docker:dind
    when: on_success
    needs: [ "nuxt_build_tags" ]
    dependencies: [ "nuxt_build_tags" ]
    script:
        # Connect to your Gitlab Registry
        - "docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}"
        # App image build
        - "docker build -t ${CI_REGISTRY_IMAGE}/node -f .docker/node/Dockerfile ."
        - "docker tag ${CI_REGISTRY_IMAGE}/node ${CI_REGISTRY_IMAGE}/node:${CI_COMMIT_TAG}"
        - "docker push ${CI_REGISTRY_IMAGE}/node:latest"
        - "docker push ${CI_REGISTRY_IMAGE}/node:${CI_COMMIT_TAG}"
        # NGINX image build
        - "docker build -t ${CI_REGISTRY_IMAGE}/nginx -f .docker/nginx/Dockerfile ."
        - "docker tag ${CI_REGISTRY_IMAGE}/nginx ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_TAG}"
        - "docker push ${CI_REGISTRY_IMAGE}/nginx:latest"
        - "docker push ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_TAG}"
        # Varnish image build
        - "docker build -t ${CI_REGISTRY_IMAGE}/varnish -f .docker/varnish/Dockerfile ."
        - "docker tag ${CI_REGISTRY_IMAGE}/varnish ${CI_REGISTRY_IMAGE}/varnish:${CI_COMMIT_TAG}"
        - "docker push ${CI_REGISTRY_IMAGE}/varnish:latest"
        - "docker push ${CI_REGISTRY_IMAGE}/varnish:${CI_COMMIT_TAG}"
